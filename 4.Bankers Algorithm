#include<stdio.h>
#include<stdlib.h>


int n,m,flag=0;
int work[10],finish[10];
int available[10];
int max[10][10];
int allocation[10][10];
int need[10][10];
int request[10],proc_id;
int avail[10],alloc[10][10],nee[10][10];
int disp[10],l=0; 

void safety(){
	
	for(int k=0;k<n;k++){
       for(int i=0;i<n;i++){
       	 int flag=0;
    	  for (int j = 0; j < m; j++)
    	   {
    		
    	  if( nee[i][j] > work[j]){
           	 flag=1;
           	 break;
           }
         }

         if(finish[i]==0&&flag==0){
        	finish[i]=1;
        	disp[l++]=i;
        	
        	for(int j=0;j<m;j++)
        	 {
        		work[j]+=alloc[i][j];
        	 }
         }  


         }
     }
    for(int i=0;i<n;i++){
      if(finish[i]!=1){
       printf("\nNOT IN SAFE STATE\n");
       exit(0);
       }
     }
     for (int i = 0; i < n; i++)
     {
     	printf("P[%d]\t",disp[i]);
     }
    printf("\nTHE SYSTEM IS IN SAFE STATE\n");   

}
int main()
{

    

    printf("\nenter no of processes and resources\n");
    scanf("%d%d",&n,&m);
    
	
    printf("\n Enter available array\n");
    for(int i=0;i<m;i++){
	
     scanf("%d",&available[i]);
       //work[i]=available[i];
       avail[i]=available[i];
     }
    
    printf("\nEnter max matrix\n");
    for(int i=0;i<n;i++){
    	 finish[i]=0;
    	for(int j=0;j<m;j++){
               
              scanf("%d",&max[i][j]);

    	}
    }

   
    printf("\nEnter allocation matrix\n");
    for(int i=0;i<n;i++){
    	for(int j=0;j<m;j++){
    		scanf("%d",&allocation[i][j]);
    		alloc[i][j]=allocation[i][j];
    	}
    } 

    
    for (int i = 0; i < n;i++)
    {
    	for (int j = 0; j < m;j++ )
    	{
    		 need[i][j]=max[i][j]-allocation[i][j];
    		 nee[i][j]=need[i][j];
    	}
    }

   printf("\n NEED MATRIX\n"); 
   for (int i = 0; i < n; i++)
    {
    	for(int j=0;j<m;j++)
    		printf("%d\t",need[i][j]);
    	printf("\n");
    } 

   //****************RESOUCE-REQUEST ALGORITHM**********
    
    printf("\nEnter the number of process requesting resouces");
    scanf("%d",&proc_id);
    printf("\nEnter request array");
    for(int i=0;i<m;i++)
    	scanf("%d",&request[i]);
    int flag=0;
    
    	for(int j=0;j<m;j++){

    	   if(request[j]>need[proc_id][j]){
              flag=1;
              printf("\nIt is greater than need  ");
              break;
    	   }
    	  }
    	  if(flag==0){
              for(int j=0;j<m;j++){
              	if(request[j]>available[j]){
              		flag=1;
              		printf("\n it is greater than available ");
              		break;
              	}
              }
     
             }
    
   if(flag==0){
      for (int j = 0; j < m; j++)
      {
        avail[j]-=request[j];
        work[j]=avail[j];
        alloc[proc_id][j]+=request[j];
        nee[proc_id][j]-=request[j];
      }

      finish[proc_id]=1;
      disp[l++]=proc_id;
      for (int j = 0; j < m; j++)
       {
              work[j]+=alloc[proc_id][j];
       } 
      
      safety();
    }
